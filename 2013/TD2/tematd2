
package tematd2;

/**
 *
 * @author Popescu Eduard 1221F
 */
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.logging.Level;
import java.util.logging.Logger;
public class Tematd2 {
private static  BufferedInputStream bufferedInput = null;
private static FileInputStream fis;
private static FileOutputStream fos;
private static  BufferedOutputStream bufferedOutput = null;
private static  String chunk;
public static ArrayList<String> personnes = new ArrayList<String>();
 static BlockingQueue sharedQueue = new LinkedBlockingQueue();


    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
fos = new FileOutputStream("Bonjour.txt");
} catch (FileNotFoundException e) {
e.printStackTrace();
  	}
bufferedOutput = new BufferedOutputStream(fos);
readFromFile();
Thread prodThreadMme = new Thread(new ProducerMme(sharedQueue, personnes));
Thread prodThreadM = new Thread(new ProducerM(sharedQueue, personnes));
Thread consThread = new Thread(new Consumer(sharedQueue));
 prodThreadM.start();
 prodThreadMme.start();
consThread.start();
    }
public static void readFromFile() {
   try {
fis = new FileInputStream("ListePersonnes.txt");
bufferedInput = new BufferedInputStream(fis);
} catch (FileNotFoundException e1) {
e1.printStackTrace();
		}
 byte[] buffer = new byte[1024];
 try {
  int bytesRead = 0;  
while ((bytesRead = bufferedInput.read(buffer)) != -1) {
chunk = new String(buffer, 0, bytesRead);
String[] aux = chunk.split("\n");
for (int i=0; i<aux.length; i++)
personnes.add(aux[i]);
            }
 } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } 
        finally {
            //Close the BufferedInputStream
            try {
                if (bufferedInput != null)
                    bufferedInput.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    public static void writeToFile(String s) {
    	  try {
bufferedOutput.write(("Bonjour " + s).getBytes());
System.out.println("Bonjour " + s);
bufferedOutput.write("\r\n".getBytes());
	} catch (IOException e) {
e.printStackTrace();
    }
   }
    public static void closeBufferOutput(){
  try {
  System.out.println("!!!!!!")
if (bufferedOutput != null) {
bufferedOutput.flush();
bufferedOutput.close();
}
  } catch (IOException ex) {

                       
 ex.printStackTrace();
    }
  }

 
}
